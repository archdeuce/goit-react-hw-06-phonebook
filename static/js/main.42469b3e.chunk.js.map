{"version":3,"sources":["redux/contact/contact-types.js","redux/contact/contact-reducer.js","redux/store.js","redux/contact/contact-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["combineReducers","items","state","type","payload","types","filter","id","rootReducer","contacts","contactReducer","store","createStore","composeWithDevTools","name","number","generate","contactId","value","ContactForm","changeHandler","e","preventDefault","setState","currentTarget","submitHandler","props","addContact","this","className","action","onSubmit","htmlFor","autoComplete","required","onChange","Component","connect","dispatch","contact","contactActions","ContactList","onDeleteContact","map","onClick","getVisibleContacts","normalizedFilter","toLowerCase","includes","Filter","inputHandler","changeFilter","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42469b3e.chunk.js","sourcesContent":["const ADD = 'contact/Add';\r\nconst DELETE = 'contact/Delete';\r\nconst CHANGE_FILTER = 'contact/ChangeFilter';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { ADD, DELETE, CHANGE_FILTER };\r\n","import { combineReducers } from 'redux';\r\nimport types from './contact-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactReducer from './contact/contact-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import { generate } from 'shortid';\r\nimport types from './contact-types';\r\n\r\nconst addContact = ({ name, number }) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React, { Component } from 'react';\nimport './ContactForm.css';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contact/contact-actions';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  changeHandler = e => {\n    e.preventDefault();\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.addContact({ name, number });\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form\n          className=\"ContactForm__form\"\n          action=\"URL\"\n          onSubmit={this.submitHandler}\n        >\n          <label className=\"ContactForm__label\" htmlFor=\"nameId\">\n            Name:\n          </label>\n          <input\n            className=\"ContactForm__input\"\n            id=\"nameId\"\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"off\"\n            required\n            value={name}\n            onChange={this.changeHandler}\n          ></input>\n          <label className=\"ContactForm__label\" htmlFor=\"telId\">\n            Number:\n          </label>\n          <input\n            className=\"ContactForm__input\"\n            id=\"telId\"\n            name=\"number\"\n            type=\"tel\"\n            autoComplete=\"off\"\n            required\n            value={number}\n            onChange={this.changeHandler}\n          ></input>\n          <button className=\"ContactForm__button\" type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch(contactActions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contact/contact-actions';\nimport './ContactList.css';\n\nclass ContactList extends Component {\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n\n    return (\n      <div className=\"ContactList__container\">\n        <ul className=\"ContactList__list\">\n          {contacts.map(({ id, name, number }) => (\n            <li key={id} className=\"ContactList__list_item\">\n              <button\n                className=\"ContactList__delete_button\"\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                <span>Delete</span>\n              </button>\n\n              <span className=\"ContactList__name\">{name}</span>\n              <span className=\"ContactList__dash\"> - </span>\n              <span className=\"ContactList__number\">{number}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n  // contacts: items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contact/contact-actions';\nimport './Filter.css';\n\nclass Filter extends Component {\n  inputHandler = e => {\n    this.props.changeFilter(e.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"Filter__container\">\n        <label className=\"Filter__label\" htmlFor=\"filterId\">\n          Find contacts by name:\n        </label>\n        <input\n          className=\"Filter__input\"\n          id=\"filterId\"\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={this.inputHandler}\n        ></input>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: value => dispatch(contactActions.changeFilter(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}